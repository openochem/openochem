FROM pytorch/pytorch:1.13.1-cuda11.6-cudnn8-runtime
#newest docker image

ARG SOURCE=/tmp/ochem-external-tools/

# indicate on how many CPUs it should be compiled
ARG JNN=j6
ARG PYTHON=3.10

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get -qq update --fix-missing && apt-get update &&\
# first install tomcat for external use
    apt-get -y --no-install-recommends install apt-utils openjdk-8-jdk vim tar wget locate zip unzip iputils-ping python$PYTHON python3-pip git authbind wait-for-it &&\
    apt-get -y install software-properties-common screen libgomp1 &&\
    add-apt-repository -y ppa:ubuntu-toolchain-r/test && apt-get update && apt-get install -y gcc-9 && apt-get install -y libstdc++6 g++ &&\
    apt-get -y install cmake libopenblas-base libomp-dev && apt-get -y install ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 tzdata

ARG HOME=/etc/ochem

#Installing external tools from OpenOchem source repositories
RUN cd /tmp ; git clone https://github.com/openochem/ochem-external-tools.git &&\
# copy to correct place
    mkdir $HOME && cd $HOME && cp -r $SOURCE/ochem/ . && mkdir -p /etc/cs_servers && mkdir -p /etc/source && cp -r $SOURCE/* /etc/source &&\
# Fragmentor
    mkdir -p /etc/source/fragmentor/ && wget https://web.archive.org/web/20150219162247/http://infochim.u-strasbg.fr/recherche/Download/Fragmentor/Fragmentor2014_Linux-64bit && mv Fragmentor2014_Linux-64bit /etc/source/fragmentor/isida-fragmentor-linux &&\
# MOPAC2016
    cd && mkdir -p /etc/source/mopac2016 && mkdir mop && cd mop && wget http://openmopac.net/MOPAC2016_for_Linux_64_bit.zip && unzip MOPAC2016_for_Linux_64_bit.zip && cp MOPAC2016.exe /etc/source/mopac2016/MOPAC2016-linux && cd && rm -rf mop &&\
# KRAKENX
    cd && git clone https://gitlab.com/vishsoft/krakenx.git && cd krakenx/build && bash build.sh && cp KrakenX.jar /etc/source/mopac2016 && cd && rm -rf krakenx && rm -rf /etc/source/mopac2016/mopac.txt /etc/source/mopac2016/mols.txt &&\
# SIGMA profiles
    git clone https://github.com/lvpp/sigma.git && cp sigma/MOPAC/POA1.rm1 /etc/source/mopac2016/ && rm -rf sigma &&\
# Mold2
    mkdir -p /etc/source/mold2/ && wget 'https://www.fda.gov/files/science%20&%20research/published/Mold2-Executable-File.zip' && unzip Mold2-Executable-File.zip && cp Mold2/Linux_x86-64/Mold2 /etc/source/mold2/mold2-linux && rm -rf Mold2* &&\
# LibSVM
    git clone https://github.com/cjlin1/libsvm.git && cd libsvm && make && cp svm-train /etc/source/libsvm/svm-train-linux && cp svm-predict /etc/source/libsvm/svm-predict-linux && cd .. && rm -rf libsvm &&\
# GSFRAG
    cd /etc/source/gsfrag/source && bash make.sh && mv gsfrag ../gsfrag-linux && mv gsfragl ../gsfragl-linux &&\
    apt-get remove -y gcc-9 && apt-get -y autoremove

#Tomcats
ARG apacheversion="9.0.74"
ARG TOM=9
ARG apachetomcat="apache-tomcat-"$apacheversion
ARG package="$HOME/ochem"
ARG conf_dir="$package/conf"
RUN cd && wget http://archive.apache.org/dist/tomcat/tomcat-$TOM/v$apacheversion/bin/$apachetomcat.zip && unzip $apachetomcat.zip && cp -r $apachetomcat "$HOME/ochem-tomcat" && rm -rf "$HOME/ochem-tomcat/webapps/ROOT" && mv $apachetomcat "$HOME/metaserver-tomcat" && rm -rf $apachetomcat.zip && ln -sf $conf_dir/tomcat/ochem-server.xml $HOME/ochem-tomcat/conf/server.xml && ln -sf $conf_dir/tomcat/metaserver-server.xml $HOME/metaserver-tomcat/conf/server.xml && mkdir /etc/ochem/cs_release && cd $HOME ; zip -9 -r /home/ochem.zip *

ENV CUDA_HOME=/usr/local/cuda/
ENV PATH=/usr/local/cuda/bin:$PATH
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH

ARG VERSION=11
ARG CUDA=6
ARG PYTORCHMAIN=1.13
ARG PYTORCHMIN=1
ARG TENSOR=2.12.0
ARG KGCN=2.0.4

ARG PYTORCH=${PYTORCHMAIN}.${PYTORCHMIN}+cu${VERSION}${CUDA}

ARG OCHEMENV=base

RUN if [ "$OCHEMENV" != "base" ] ; then eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)" && conda create --name $OCHEMENV python==$PYTHON ; fi

RUN eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)"  && conda activate $OCHEMENV && conda install -y scikit-learn libgcc gmp

# PIP
RUN eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)" && conda activate $OCHEMENV && pip install rdkit && pip install catboost lightgbm molvs xgboost &&\ 
    pip install h5py && pip install --no-cache-dir tensorflow==$TENSOR && pip install tensorflow_addons line_profiler pudb chainer kgcnn==$KGCN &&\
    pip install --no-cache-dir git+https://github.com/mordred-descriptor/mordred && pip install gpflow &&\ 
    pip install --no-cache-dir git+https://github.com/bp-kelley/descriptastorus &&\ 
    pip install --no-cache-dir torch-scatter -f https://pytorch-geometric.com/whl/torch-${PYTORCH}.html && pip install --no-cache-dir torch-sparse -f https://pytorch-geometric.com/whl/torch-${PYTORCH}.html && pip install --no-cache-dir torch-geometric -f https://pytorch-geometric.com/whl/torch-${PYTORCH}.html 

# Conda forge
RUN eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)" && conda activate $OCHEMENV && conda install -c conda-forge openbabel pymol-open-source

ARG DEPRECATED=true

RUN if [ "$DEPRECATED" = "true" ] ; then \
#create additional tools in the map4 environment -->
    eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)" && cd && git clone https://github.com/reymond-group/map4 && cd map4 && conda env create -f environment.yml && conda activate map4 && pip install --no-cache-dir git+https://github.com/reymond-group/map4 && cd && rm -rf map4 &&\
#MACAU
    cd && pip install --no-cache-dir numpy scipy cython pandas requests && pip install --no-cache-dir requests && git clone https://github.com/jaak-s/macau.git && cd macau && python3.6 setup.py install && cd; rm -rf macau &&\
#CDDD
    pip install --no-cache-dir tensorflow==1.14 && pip install --no-cache-dir numpy scikit-learn==0.22 pandas && git clone https://github.com/jrwnter/cddd.git && cd cddd/ && sed -i 's|-gpu==1.10.0||' setup.py && python3.6 setup.py install && pip install --no-cache-dir gdown && gdown 1oyknOulq_j0w9kzOKKIHdTLo5HphT99h && unzip default_model.zip && mkdir -p /etc/source/cddd && cp default_model/* /etc/source/cddd && cd && rm -rf cddd &&\
#DEEPCHEM    
    conda activate $OCHEMENV && pip install --no-cache-dir h5py==3.6.0 && pip install deepchem opencv-python sympy==1.8 tensorboardX &&\
# OpenBabel 2.4.1 required for spectrophores
    cd && wget https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-2-4-1.tar.gz && tar -zxf openbabel-2-4-1.tar.gz && rm openbabel-2-4-1.tar.gz && cd openbabel-openbabel-2-4-1 && mkdir build && cd build/ && cmake .. && make -$JNN && make install && cd && rm -rf openbabel* &&\
# silicos-it
    cd && mkdir -p /etc/source/silicos-it && git clone https://github.com/silicos-it/strip-it.git && cd strip-it && cmake CMakeLists.txt && make && cp strip-it  /etc/source/silicos-it/strip-it-linux && cd && rm -rf strip-it &&\
#R latest version
    apt-get install -y --no-install-recommends software-properties-common dirmngr && wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc &&\
    add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/" && \
    apt-get update && apt-get install -y r-base && /usr/bin//Rscript -e 'install.packages("randomForest",repos="http://cran.us.r-project.org")' && /usr/bin//Rscript -e 'install.packages("pls",repos="http://cran.us.r-project.org")'\
    cd /etc/source/ && rm -rf */*-aarch64 */*-darwin \
    ; else \
# delete not used code for short version	
    cd /etc/source/ && rm -rf */*-aarch64 */*-darwin sirms-master silicos-it mopac map4 macau kpls deep chemprop imgqsar\
    ; fi

#making executable
RUN chmod +x /etc/source/*/* && chmod +x /etc/source/*/*/* && chmod 777 -R /etc/source && chmod 777 -R /etc/cs_servers && chmod 777 /var/run/screen && chmod +x /opt/conda/etc/profile.d/conda.sh && mkdir /ochem && updatedb && rm -rf $HOME/*

ENV PATH=/opt/conda/bin/:/usr/local/cuda/bin:$PATH
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
ENV SCREENDIR=/tmp/.screen
ENV OMP_NUM_THREADS=1
ENV CUDA_DEVICE_ORDER=PCI_BUS_ID
