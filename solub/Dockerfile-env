FROM pytorch/pytorch:2.0.1-cuda11.7-cudnn8-devel
# Container configuration
ARG PYTHON=3.10
ARG TOM=9
ARG apacheversion="$TOM.0.91"
ARG VERSION=11
ARG CUDA=7
ARG PYTORCHMAIN=2.0
ARG PYTORCHMIN=1
ARG TENSOR=2.11.1
ARG KGCN=2.0.4

# Local files
ARG LOCAL=ochem
ARG FIXED=false

# Technical
ARG JNN=j6
ENV DEBIAN_FRONTEND=noninteractive
ARG HOME=/etc/ochem
ARG apachetomcat="apache-tomcat-"$apacheversion
ARG package="$HOME/ochem"
ARG conf_dir="$package/conf"
ENV OCHEMENV=base
ENV CUDA_HOME=/usr/local/cuda/
ENV PATH=/opt/conda/bin/:/usr/local/cuda/bin:$PATH
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
ARG PYTORCH=${PYTORCHMAIN}.${PYTORCHMIN}+cu${VERSION}${CUDA}
ARG SOURCE=/etc/source

RUN apt-get -qq update --fix-missing &&\
    apt-get -y --no-install-recommends install apt-utils openjdk-8-jdk vim tar wget locate zip unzip iputils-ping python$PYTHON python3-pip git authbind wait-for-it &&\
    apt-get -y install software-properties-common screen libgomp1 &&\
    add-apt-repository -y ppa:ubuntu-toolchain-r/test && apt-get update &&\
    apt-get -y install gcc libstdc++6 g++ cmake libopenblas-base libomp-dev ca-certificates &&\
    apt-get -y install libglib2.0-0 libxext6 libsm6 libxrender1 tzdata build-essential nvidia-cuda-toolkit 

#Installing external tools from openOchem source repositories
RUN \ 
	git clone https://github.com/openochem/ochem-external-tools.git $SOURCE &&\
# copy to the correct place
    mkdir -p $HOME && cd $HOME && cp -r $SOURCE/ochem/ . && mkdir -p /etc/cs_servers &&\
# Fragmentor
    mkdir -p $SOURCE/fragmentor/ && wget -q https://web.archive.org/web/20150219162247/http://infochim.u-strasbg.fr/recherche/Download/Fragmentor/Fragmentor2014_Linux-64bit && mv Fragmentor2014_Linux-64bit $SOURCE/fragmentor/isida-fragmentor-linux &&\
# MOPAC2016
    cd && mkdir -p $SOURCE/mopac2016 && mkdir mop && cd mop && wget -q http://openmopac.net/MOPAC2016_for_Linux_64_bit.zip && unzip MOPAC2016_for_Linux_64_bit.zip && cp MOPAC2016.exe $SOURCE/mopac2016/MOPAC2016-linux && cd && rm -rf mop &&\
# SIGMA profiles
    git clone https://github.com/lvpp/sigma.git && cp sigma/MOPAC/POA1.rm1 $SOURCE/mopac2016/ && rm -rf sigma &&\
# Mold2
    mkdir -p $SOURCE/mold2/ && wget -q 'https://www.fda.gov/files/science%20&%20research/published/Mold2-Executable-File.zip' && unzip Mold2-Executable-File.zip && cp Mold2/Linux_x86-64/Mold2 $SOURCE/mold2/mold2-linux && rm -rf Mold2* &&\
# LibSVM
    git clone https://github.com/cjlin1/libsvm.git && cd libsvm && make && cp svm-train $SOURCE/libsvm/svm-train-linux && cp svm-predict $SOURCE/libsvm/svm-predict-linux && cd .. && rm -rf libsvm &&\
# GSFRAG
    cd $SOURCE/gsfrag/source && bash make.sh && mv gsfrag ../gsfrag-linux && mv gsfragl ../gsfragl-linux &&\
    apt-get install -y --no-install-recommends software-properties-common dirmngr && wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc &&\
    add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/" && \
    apt-get update && apt-get install -y r-base && /usr/bin//Rscript -e 'install.packages("randomForest",repos="http://cran.us.r-project.org")' && /usr/bin//Rscript -e 'install.packages("pls",repos="http://cran.us.r-project.org")'

#Tomcats
RUN \ 
cd && wget -q http://archive.apache.org/dist/tomcat/tomcat-$TOM/v$apacheversion/bin/$apachetomcat.zip && unzip $apachetomcat.zip && cp -r $apachetomcat "$HOME/ochem-tomcat" && rm -rf "$HOME/ochem-tomcat/webapps/ROOT" && mv $apachetomcat "$HOME/metaserver-tomcat" && rm -rf $apachetomcat.zip && ln -sf $conf_dir/tomcat/ochem-server.xml $HOME/ochem-tomcat/conf/server.xml && ln -sf $conf_dir/tomcat/metaserver-server.xml $HOME/metaserver-tomcat/conf/server.xml && mkdir /etc/ochem/cs_release && cd $HOME ; zip -9 -r /home/ochem.zip * 

COPY solub/conda-solub.yml /root/ochem-conda.yml

RUN \ 
eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)" && conda activate $OCHEMENV &&\
     conda update -n $OCHEMENV -c defaults conda &&\
     conda env update -f /root/ochem-conda.yml
     #conda install -n base --override-channels -c conda-forge mamba 'python_abi=*=*cp*' && mamba env update -f /root/ochem-conda.yml

RUN  cd $SOURCE/ && rm -rf */*-aarch64 */*-darwin

RUN apt-get -y autoremove && apt-get -y clean

#making executable
RUN chmod -R +x $SOURCE && chmod 777 -R $SOURCE && chmod 777 -R /etc/cs_servers && chmod 777 /var/run/screen && chmod +x /opt/conda/etc/profile.d/conda.sh && mkdir /ochem && updatedb && rm -rf $HOME/*

ENV SCREENDIR=/tmp/.screen
ENV OMP_NUM_THREADS=1
ENV CUDA_DEVICE_ORDER=PCI_BUS_ID
ENV OCHEM_HOME="/home/openochem"
