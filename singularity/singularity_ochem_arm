BootStrap: docker
From: nvidia/cuda:11.3.1-devel-ubuntu20.04

#installation for arm64, e.g. Ubuntu running on Mac m1

%labels
MAINTAINER itetko 

%files
#source /root/ochem-external-tools

%post
VERSION=11
CUDA=3
PYTORCHMAIN=1.10
PYTORCHMIN=2
PYTHON=3.9

CUDAPATH=${VERSION}.${CUDA}
CUDTORCH=cu${VERSION}${CUDA} # For pytorch
SOURCE=/root/ochem-external-tools/

JNN=j6 # indicate on how many CPUs it should be compiled
BOOST=1.73

TENSOR=2.9.1

export DEBIAN_FRONTEND=noninteractive

apt-get -qq update --fix-missing

# first install tomcat for external use
apt-get -y install openjdk-8-jdk vim tar wget locate zip python$PYTHON python3-pip git

# disable if you wish to use local source repository
cd /root; rm -rf $SOURCE; git clone https://github.com/openochem/ochem-external-tools.git

HOME=/etc/ochem
mkdir $HOME 
cd $HOME 
cp -r $SOURCE/ochem/ .
chmod +x *
chmod +x */*
chmod +x */*/*

mkdir -p /etc/cs_servers
mkdir -p /etc/source
cp -r $SOURCE/* /etc/source
chmod +x /etc/source/*/*
rm -rf /tmp/ochemtest
##

#not yet on aarch64
#MOPAC2016
#KRAKENX
#SIGMA profiles

#GSFrag
cd /etc/source/gsfrag/source
bash make.sh
mv gsfrag ../gsfrag-aarch64
mv gsfragl ../gsfragl-aarch64

rm -r $SOURCE

apacheversion="9.0.71"
TOM=9
apachetomcat="apache-tomcat-"$apacheversion
package="$HOME/ochem"
conf_dir="$package/conf"

cd
wget http://archive.apache.org/dist/tomcat/tomcat-$TOM/v$apacheversion/bin/$apachetomcat.zip
unzip $apachetomcat.zip
cp -r $apachetomcat "$HOME/ochem-tomcat"; rm -rf "$HOME/ochem-tomcat/webapps/ROOT"
mv $apachetomcat "$HOME/metaserver-tomcat"
rm -rf $apachetomcat.zip
ln -sf $conf_dir/tomcat/ochem-server.xml $HOME/ochem-tomcat/conf/server.xml
ln -sf $conf_dir/tomcat/metaserver-server.xml $HOME/metaserver-tomcat/conf/server.xml 

mkdir /etc/ochem/cs_release
cd /etc/ochem ; zip -9 -r /home/ochem.zip *
#finished Tomcat

apt-get -y install openjdk-8-jdk emacs-nox vim tar unzip screen wget libgomp1 locate # OCHEM
apt-get -y install git cmake wget libopenblas-base libomp-dev
apt-get -y install ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 pymol

##For Ubuntu 20
sed -i 's|python3|/usr/bin/python3|' /usr/bin/pymol # FIX for PYMOL 

##OpenBabel (2.4.1 is required for specrophores; should be installed before other code to avoid conflicts)

cd
wget https://sourceforge.net/projects/openbabel/files/openbabel/2.4.1/openbabel-2.4.1.tar.gz/download
tar -zxf download
rm download 
cd openbabel-2.4.1
sed -i 's|-119|137|' src/formats/pngformat.cpp # FIX for char 
sed -i 's|-16|240|'  src/formats/yasaraformat.cpp # FIX for char  
mkdir build
cd build/
cmake ..
make -$JNN
make install
cd
rm -rf openbabel-2.4.1

#silicos-it
cd
mkdir -p /etc/source/silicos-it
git clone https://github.com/silicos-it/strip-it.git
cd strip-it
cmake CMakeLists.txt
make
cp strip-it  /etc/source/silicos-it/strip-it-aarch64
cd
rm -rf strip-it


##OpenBabel v.3
cd
apt-get install -y software-properties-common
git clone https://github.com/openbabel/openbabel
cd openbabel/
mkdir build
cd build
cmake -DRUN_SWIG=ON -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/usr/local ..
make -$JNN
make install
cd
rm -rf openbabel

########################## START Conda base
wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-aarch64.sh -O /root/anaconda.sh
/bin/bash /root/anaconda.sh -b -p /opt/conda
rm /root/anaconda.sh
ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
. /opt/conda/etc/profile.d/conda.sh
conda activate base
cd

PATH=/opt/conda/bin:$PATH
conda install python=$PYTHON
conda update -y -n base -c defaults conda

conda install -c conda-forge notebook
add-apt-repository ppa:mhier/libboost-latest
apt update

apt-get -y install build-essential g++ autotools-dev libicu-dev build-essential libbz2-dev libboost$BOOST-dev gfortran cmake # otherwise install default version 

#### RDKIT
# RDKit build configuration and dependencies
mkdir /workspace
cd /workspace
git clone https://github.com/rdkit/rdkit.git 

conda install -y joblib matplotlib cmake cairo pillow eigen pkg-config boost-cpp=$BOOST boost=$BOOST py-boost=$BOOST
pip install -U numpy
apt-get -y install flex bison

mkdir -p /workspace/rdkit/build
cd /workspace/rdkit/build
# prepare compile
cmake -DCMAKE_INSTALL_PREFIX=/workspace/rdkit/ -DPYTHON_EXECUTABLE=/opt/conda/bin/python -DRDK_USE_FLEXBISON=ON -DRDK_BUILD_PYTHON_WRAPPERS=ON -DRDK_BUILD_CPP_TESTS=ON -DTHREADS_PTHREAD_ARG=OFF -DPYTHON_LIBRARY=/opt/conda/lib -DRDK_BUILD_AVALON_SUPPORT=ON -DRDK_BUILD_CAIRO_SUPPORT=ON -DRDK_BUILD_CPP_TESTS=OFF -DRDK_BUILD_INCHI_SUPPORT=ON -DRDK_BUILD_FREESASA_SUPPORT=ON -DRDK_BUILD_YAEHMOP_SUPPORT=ON -DPy_ENABLE_SHARED=1 -DEIGEN3_INCLUDE_DIR=/opt/conda/include/eigen3 ..

make -$JNN install

cd ..
rm -rf build
rm -rf .git
#### RDKIT

export RDBASE=/workspace/rdkit
export PYTHONPATH=$PYTHONPATH:$RDBASE
export CUDA_HOME=/usr/local/cuda/
export PATH=/opt/conda/bin/:/usr/local/cuda/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH:${RDBASE}/lib

pip install git+https://github.com/bp-kelley/descriptastorus
pip install texttable

conda install -c pytorch torchvision 
pip install torch-geometric
pip install pytorch-lightning
conda install -y scikit-learn
conda install -y -c conda-forge openbabel 
pip install --upgrade pip
pip install --upgrade tensorflow-aarch64==$TENSOR
pip install --upgrade protobuf # FIX for recent error

pip install h5py Pebble matplotlib keras tensorboardX pyyaml
pip install xlrd  mysql.connector
pip install sympy 
pip install opencv-python

pip install deepchem # deepchem v.2
pip install tensorflow-probability 
pip install tables fire 

## an attempt to use a newer version results in crash...
apt-get -y install r-base 

#/usr/bin//Rscript -e 'install.packages("randomForest",repos="http://cran.us.r-project.org")' # no supprt for version 3.6.2
/usr/bin//Rscript -e 'install.packages("pls",repos="http://cran.us.r-project.org")'

conda install -y -c conda-forge pygpu

pip install mhfp
pip install pudb line_profiler

conda update conda

pip install git+https://github.com/mordred-descriptor/mordred
pip install chainer
pip install molvs

apt-get install -y libstdc++6

add-apt-repository ppa:ubuntu-toolchain-r/test
apt-get update
apt-get -y upgrade
apt-get -y dist-upgrade

chmod +x /etc/source/*/*
chmod 777 -R /etc/source
chmod 777 -R /etc/cs_servers
chmod 777 /var/run/screen

chmod +x /opt/conda/etc/profile.d/conda.sh
mkdir /ochem
updatedb

%environment
export RDBASE=/workspace/rdkit
export PATH=/opt/conda/bin/:/usr/local/cuda/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH:${RDBASE}/lib
export PYTHONPATH=$PYTHONPATH:$RDBASE
export SCREENDIR=/tmp/.screen
export OMP_NUM_THREADS=1
export CUDA_DEVICE_ORDER=PCI_BUS_ID
export OCHEMEMORY=2048
export METAMEMORY=1024

